import kotlin.Boolean;
CREATE TABLE IF NOT EXISTS station (
    slug                TEXT NOT NULL PRIMARY KEY,
    route               TEXT NOT NULL,
    name                TEXT NOT NULL,
    annotateAsNew       INTEGER AS Boolean NOT NULL,
    additionalInfoKey   TEXT,

    FOREIGN KEY(route) REFERENCES route(slug),
    FOREIGN KEY(slug) REFERENCES location(referenceSlug),
    FOREIGN KEY(slug) REFERENCES fee(referenceSlug),
    FOREIGN KEY(additionalInfoKey) REFERENCES localized_string(key),
    FOREIGN KEY(slug) REFERENCES website(referenceSlug)
);

insert:
INSERT INTO station(slug, route, name, annotateAsNew, additionalInfoKey)
VALUES ?;

clear:
DELETE FROM station;

getBasicByRoute:
SELECT slug, name, annotateAsNew FROM station WHERE route = :routeSlug;

getBasicBySlugs:
SELECT slug, name, annotateAsNew FROM station WHERE slug IN :slugs;

getDetailedById:
SELECT station.slug, station.name, station.annotateAsNew, localized_string.string AS additionalInfo
FROM station
LEFT JOIN localized_string
    ON localized_string.key = station.additionalInfoKey
    AND localized_string.locale = "de"
WHERE station.slug = :stationSlug;