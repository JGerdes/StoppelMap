import kotlin.Boolean;
import kotlinx.datetime.LocalDateTime;

CREATE TABLE event (
    slug TEXT NOT NULL PRIMARY KEY,
    nameKey TEXT NOT NULL,
    start TEXT AS LocalDateTime NOT NULL,
    end TEXT AS LocalDateTime,
    descriptionKey TEXT,
    locationSlug TEXT,
    isOfficial INTEGER AS Boolean NOT NULL,

    FOREIGN KEY(locationSlug) REFERENCES map_entity(slug),
    FOREIGN KEY(nameKey) REFERENCES localized_string(key),
    FOREIGN KEY(descriptionKey) REFERENCES localized_string(key),
    FOREIGN KEY(slug) REFERENCES website(referenceSlug)
);

insert:
INSERT INTO event(slug, nameKey, start, end, descriptionKey, locationSlug, isOfficial)
VALUES ?;

clear:
DELETE FROM event;

getAll:
SELECT event.*, map_entity.name AS locationName FROM event
LEFT JOIN map_entity ON map_entity.slug = event.locationSlug;

getAllAfter:
SELECT event.*, map_entity.name AS locationName FROM event
LEFT JOIN map_entity ON map_entity.slug = event.locationSlug
WHERE start > ? ORDER BY start;

getAllOfficial:
SELECT event.*, map_entity.name AS locationName FROM event
LEFT JOIN map_entity ON map_entity.slug = event.locationSlug
WHERE isOfficial = 1;

getAllOfficialAfter:
SELECT event.*, map_entity.name AS locationName FROM event
LEFT JOIN map_entity ON map_entity.slug = event.locationSlug
WHERE isOfficial = 1 AND start > ? ORDER BY start;