import kotlinx.datetime.LocalDateTime;

CREATE TABLE IF NOT EXISTS departure (
    departureDay    TEXT NOT NULL,
    time            TEXT AS LocalDateTime NOT NULL,
    arrival         TEXT AS LocalDateTime,
    annotationKey   TEXT,

    FOREIGN KEY(departureDay) REFERENCES departure_day(slug),
    FOREIGN KEY(annotationKey) REFERENCES localized_string(key)
);

insert:
INSERT INTO departure(departureDay, time, arrival, annotationKey)
VALUES ?;

clear:
DELETE FROM departure;

get:
SELECT time, annotationKey FROM departure WHERE departureDay = :departureDay;

getTimesAfterByStation:
SELECT departure.time, departure_day.station
    FROM departure
    JOIN departure_day
        ON departure_day.slug = departure.departureDay
        AND departure_day.departureType = "outward"
WHERE departure.time > :after AND departure_day.station = :station
ORDER BY departure.time
LIMIT :limit;

